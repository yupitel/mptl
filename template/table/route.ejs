var Class     = require('../../dao/<%= classname %>'),
    Mapper    = require('../../dao/<%= classname %>Mapper'),
    Util      = require('../../lib/queryutil'),
    RouteUtil = require('../../lib/routeutil');

function getQuery(params) {
  var queparams = RouteUtil.getQueryParams(Class, params);
  return Util.createQueryWithParams(Class, queparams);
}

function execute(req, res, method, view) {
  var dbconn = req.dbconn;

  var format = req.params.format;
  var cb = function(records) {
    res.json({result: 'SUCCESS', data: records});
  };

  if (dbconn) {
    // get param pair
    var params  = RouteUtil.getParams(req);
    var records = RouteUtil.getRecord(req);
    var orders  = RouteUtil.getOrder(req);
    var query   = getQuery(params);
    var options = {};
    var userecords = [];
    var useorders  = [];

    if (records) {
      for (var i = 0; i < records.length; i++) {
        // check existence of field
        var isExist = false;
        for (var field in records[i]) {
          isExist = Class.isExist(field);
          if (isExist) {
            break;
          }
        }
        if (isExist) {
          userecords.push(Class.create(records[i]));
        }
      }
    }

    if (orders) {
      for (var i = 0; i < orders.length; i++) {
        // check existence of field
        var isExist = false;
        var order = orders[i];
        if (!order.key) {
          continue;
        }
        isExist = Class.isExist(order.key);
        if (isExist) {
          useorders.push(order);
        }
      }
    }


    options.que = query;
    if (method === 'select') {
      if (params.limit) {
        options.limit = params.limit;
        if (params.offset) {
          options.offset = params.offset;
        }
      }
      if (useorders && useorders.length > 0) {
        options.orders = useorders;
      }
    }
    try {
      if (Mapper[method]) {
        Mapper[method](dbconn, userecords, options, cb);
      } else {
        cb();
      }
    } catch(err) {
      res.json({result: 'FAIL'});
    }
  } else {
    res.json({result: 'FAIL', error: 'no db connection'});
  }
}

module.exports = {
  index: function(req, res){
    execute(req, res, 'select', 'show');
  },
  new: function(req, res){
    execute(req, res, 'insert', 'new');
  },  
  create: function(req, res){
    execute(req, res, 'insert', 'create');
  },  
  show: function(req, res){
    execute(req, res, 'select', 'show');
  },  
  edit: function(req, res){
    execute(req, res, 'select', 'edit');
  },  
  update: function(req, res){
    execute(req, res, 'update', 'update');
  },  
  destroy: function(req, res){
    execute(req, res, 'delete', 'destroy');
  }
};

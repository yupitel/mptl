/*
 * Object for <%= table %>
 */

var <%= classname %> = {
  create: function(data) {
    data = data || {};
    var entity = {
      <% for (var i = 0; i < columns.length; i++) { -%>
      <%= columns[i].field %><%= columns[i].space %>: undefined<% if (columns.length > 1 && i < (columns.length - 1)) { %>,<% } %>
      <% } -%>
    };

    if (data) {
      for (var field in entity) {
        if (typeof data[field] === 'function') {
          continue;
        }
        if (typeof data[field] !== 'undefined') {
          if (!<%= classname %>.useEscape(field)) {
            if (isNaN(data[field]) === true) {
              continue;
            }
          }
          entity[field] = data[field];
        }
      }
    }

    return entity;
  },
  initialize: function(obj) {
    if (!obj) {
      return;
    } 
    <% for (var i = 0; i < columns.length; i++) {%>
      obj.<%= columns[i].field %><%= columns[i].space %> = <%= columns[i].defEscape %><%= columns[i].def -%><%= columns[i].defEscape %>;
    <% } %>
  },
  setUndefined: function(obj) {
    if (!obj) {
      return;
    }
    <% for (var i = 0; i < columns.length; i++) {%>
      obj.<%= columns[i].field %><%= columns[i].space -%> = undefined;
    <% } %>
  },
  isExist: function(field) {
    if (!field) {
      return;
    }
    var table = {
      <% for (var i = 0; i < columns.length; i++) { -%>
      <%= columns[i].field %><%= columns[i].space %>: true<% if (columns.length > 1 && i < (columns.length - 1)) { %>,<% } %>
      <% } -%>
    };
    return table[field];
  },
  getAI: function() {
    <%if (ai) { -%>
    return '<%= ai.field %>';
    <% } else { -%>
    return undefined;
    <% } -%>
  },
  getKeys: function() {
    return {
      <% for (var i = 0; i < keys.length; i++) { -%>
      <%= keys[i].field %> : '<%= keys[i].key %>'<% if (keys.length > 1 && i < (keys.length - 1)) { %>,<% } %>
      <% } -%>
    };
  },
  getPrimaryKey: function() {
    return {
      <% var keynum = 0; -%>
      <% var keycnt = 0; -%>
      <% for (var i = 0; i < keys.length; i++) { -%>
      <% if (keys[i].key == 'PRI') { -%>
      <% keynum ++; -%>
      <% } -%>
      <% } -%>
      <% for (var i = 0; i < keys.length; i++) { -%>
      <% if (keys[i].key == 'PRI') { -%>
      <%= keys[i].field %> : '<%= keys[i].key %>'<% if (keycnt < (keynum - 1)) { %>,<% } %>
      <% keycnt ++; -%>
      <% } -%>
      <% } -%>
    };
  },
  getTableName: function() {
    return '<%= table %>';
  },
  getType: function(field) {
    if (!field) {
      return;
    }
    var type = {
      <% for (var i = 0; i < columns.length; i++) { -%>
      <%= columns[i].field %><%= columns[i].space %>: '<%= columns[i].type %>'<% if (columns.length > 1 && i < (columns.length - 1)) { %>,<% } %>
      <% } -%>
    };
    return type[field];
  },
  getDefault: function(field) {
    if (!field) {
      return;
    }
    var type = {
      <% for (var i = 0; i < columns.length; i++) { -%>
      <%= columns[i].field %><%= columns[i].space %>: <%= columns[i].defEscape %><%= columns[i].def %><%= columns[i].defEscape %><% if (columns.length > 1 && i < (columns.length - 1)) { %>,<% } %>
      <% } -%>
    };
    return type[field];
  },
  useEscape: function(field) {
    if (!field) {
      return;
    }
    var escape = {
      <% var i = 0;var use = []; -%>
      <% for (i = 0; i < columns.length; i++) { -%>
      <% if (columns[i].escape === true) { -%>
      <% use.push(columns[i]); -%>
      <% } -%>
      <% } -%>
      <% for (i = 0; i < use.length; i++) { -%>
      <%= use[i].field %>: true<% if (use.length > 1 && i < (use.length - 1)) { %>,<% } %>
      <% } -%>
    };
    return escape[field];
  },
  parse: function(data, datatype) {
    if (!data || typeof(data) !== 'object') {
      return data;
    }
    var type;
    for (var field in data) {
      if (typeof data[field] === 'function') {
        continue;
      }
      if (typeof data[field] !== 'undefined') {
        type = null;
        if (datatype && datatype[field]) {
          type = datatype[field];
        }
        data[field] = <%= classname %>.parseField(field, data[field], type);
      }
    }
    return data;
  },
  parseField: function(key, value, type) {
    type = type || <%= classname %>.getType(key);
    if (!type || typeof(data) === 'object') {
      return value;
    }
    if (type.indexOf('int') >= 0) {
      value = parseInt(value);
    } else if (type.indexOf('float') >= 0 || type.indexOf('double') >= 0) {
      value = parseFloat(value);
    }
    return value;
  }
};

module.exports = <%= classname -%>;

